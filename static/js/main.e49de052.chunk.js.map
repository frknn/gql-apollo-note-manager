{"version":3,"sources":["theme/styles.js","theme/index.js","theme/fonts.js","fonts/Fonts.js","ColorModeSwitcher.js","components/BgIcons.js","components/Person.js","queries.js","mutations.js","components/PeopleList.js","components/Note.js","components/NotesList.js","components/AllNotes.js","components/Home.js","components/BackButton.js","components/PersonPage.js","components/AddPerson.js","components/AddNote.js","App.js","index.js"],"names":["styles","global","props","body","bg","mode","overrides","fonts","heading","extendTheme","Fonts","ColorModeSwitcher","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","BgIcons","icons","useRef","Array","fill","bgIcon","FiSun","FiStar","opacity","p","zIndex","w","h","position","columns","spacing","current","map","_","idx","justifySelf","alignSelf","as","Person","person","deletePersonById","itemBgColor","history","useHistory","bgColor","borderRadius","align","justify","maxW","fontWeight","name","label","colorScheme","push","id","GET_ALL_PEOPLE","gql","GET_ALL_NOTES","GET_SINGLE_PERSON","DELETE_PERSON","DELETE_NOTE","TOGGLE_NOTE_COMPLETED","UPDATE_AGE","ADD_PERSON","ADD_NOTE","PeopleList","useQuery","data","loading","error","useMutation","deletePerson","variables","update","cache","modify","fields","getAllPeople","existingPersonRefs","readField","filter","personRef","overflowY","sx","display","Note","note","deleteNoteById","toast","useToast","toggleCompleted","completeNote","a","description","completed","duration","isClosable","status","flexDir","transition","textAlign","title","mt","flexGrow","owner","right","bottom","_hover","NotesList","notes","gridAutoRows","AllNotes","deleteNote","getAllNotes","existingNoteRefs","n","identify","existingNotesRef","Home","px","my","isLazy","isFitted","BackButton","top","left","goBack","PersonPage","useParams","useState","age","setAge","useDisclosure","isOpen","onOpen","onClose","updateAge","updateAgeById","parseInt","isCentered","mb","min","max","clampValueOnBlur","placeholder","value","onChange","e","target","getSinglePerson","AddPerson","setName","addPerson","submitForm","preventDefault","newPersonRef","writeFragment","fragment","boxShadow","onSubmit","isRequired","type","AddNote","setTitle","setDescription","setOwner","addNote","console","log","newNoteRef","App","centerContent","py","exact","path","client","ApolloClient","uri","InMemoryCache","ReactDOM","render","resetCSS","theme","document","getElementById"],"mappings":"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","file":"static/js/main.e49de052.chunk.js","sourcesContent":["import { mode } from '@chakra-ui/theme-tools';\r\n\r\nexport default {\r\n  styles: {\r\n    global: (props) => ({\r\n      body: {\r\n        bg: mode('gray.50')(props)\r\n      }\r\n    })\r\n  }\r\n}","import { extendTheme } from '@chakra-ui/react'\r\nimport fonts from './fonts'\r\nimport styles from './styles'\r\n\r\nconst overrides = {\r\n  ...fonts,\r\n  ...styles\r\n}\r\n\r\nexport default extendTheme(overrides)","export default {\r\n  fonts: {\r\n    heading: \"'Inter', sans-serif\",\r\n    body: \"'Inter', sans-serif\"\r\n  }\r\n}\r\n\r\n","import { Global } from \"@emotion/react\"\r\n\r\nexport const Fonts = () => (\r\n  <Global\r\n    styles={`\r\n\r\n      /* latin-ext */\r\n      @font-face {\r\n        font-family: 'Inter';\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        font-display: swap;\r\n        src: url(https://fonts.gstatic.com/s/inter/v3/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa25L7SUc.woff2) format('woff2');\r\n        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n      }\r\n      /* latin */\r\n      @font-face {\r\n        font-family: 'Inter';\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        font-display: swap;\r\n        src: url(https://fonts.gstatic.com/s/inter/v3/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2) format('woff2');\r\n        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n      } \r\n      /* latin-ext */\r\n      @font-face {\r\n        font-family: 'Inter';\r\n        font-style: normal;\r\n        font-weight: 600;\r\n        font-display: swap;\r\n        src: url(https://fonts.gstatic.com/s/inter/v3/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa25L7SUc.woff2) format('woff2');\r\n        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n      }\r\n      /* latin */\r\n      @font-face {\r\n        font-family: 'Inter';\r\n        font-style: normal;\r\n        font-weight: 600;\r\n        font-display: swap;\r\n        src: url(https://fonts.gstatic.com/s/inter/v3/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2) format('woff2');\r\n        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n      }\r\n      /* latin-ext */\r\n      @font-face {\r\n        font-family: 'Inter';\r\n        font-style: normal;\r\n        font-weight: 800;\r\n        font-display: swap;\r\n        src: url(https://fonts.gstatic.com/s/inter/v3/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa25L7SUc.woff2) format('woff2');\r\n        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n      }\r\n      /* latin */\r\n      @font-face {\r\n        font-family: 'Inter';\r\n        font-style: normal;\r\n        font-weight: 800;\r\n        font-display: swap;\r\n        src: url(https://fonts.gstatic.com/s/inter/v3/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2) format('woff2');\r\n        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n      }\r\n      `}\r\n  />\r\n)","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import React, { useRef } from 'react'\r\nimport { SimpleGrid, Icon } from \"@chakra-ui/react\";\r\nimport { FiSun } from 'react-icons/fi'\r\nimport { FiStar } from 'react-icons/fi'\r\nimport { useColorModeValue } from \"@chakra-ui/react\";\r\n\r\nconst BgIcons = () => {\r\n\r\n  const icons = useRef(new Array(12).fill(null))\r\n\r\n  const bgIcon = useColorModeValue(FiSun, FiStar)\r\n  const opacity = useColorModeValue(0.7, 0.2)\r\n  const color = useColorModeValue('yellow.200', 'gray.200')\r\n  const fill = useColorModeValue('yellow.100', 'yellow.100')\r\n\r\n  return (\r\n    <SimpleGrid\r\n      p={0}\r\n      zIndex=\"-1\"\r\n      w=\"full\"\r\n      h=\"100vh\"\r\n      position=\"absolute\"\r\n      columns={[2, 3, 4]}\r\n      spacing={4}\r\n    >\r\n      {icons.current.map((_, idx) => (\r\n        <Icon\r\n          key={idx}\r\n          opacity={opacity}\r\n          color={color}\r\n          fill={fill}\r\n          justifySelf=\"center\"\r\n          alignSelf=\"center\"\r\n          as={bgIcon}\r\n          w={12} h={12} />\r\n      ))}\r\n    </SimpleGrid>\r\n  )\r\n}\r\n\r\nexport default BgIcons\r\n\r\n","import React from 'react'\r\nimport { HStack, Text, Tooltip, IconButton, useColorModeValue } from \"@chakra-ui/react\";\r\nimport { AiFillDelete } from 'react-icons/ai'\r\nimport { CgDetailsMore } from 'react-icons/cg'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Person = ({ person, deletePersonById }) => {\r\n\r\n  const itemBgColor = useColorModeValue('rgba(203,213,224,0.7)', 'rgba(74,85,104,0.9)')\r\n\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <HStack bgColor={itemBgColor} borderRadius=\"lg\" w=\"full\" align=\"center\" justify=\"space-between\" p={4}>\r\n      <Text maxW=\"13ch\" fontSize=\"xl\" fontWeight=\"600\">{person.name}</Text>\r\n      <HStack>\r\n        <Tooltip label=\"See Details\">\r\n          <IconButton\r\n            size=\"xs\"\r\n            fontSize={16}\r\n            colorScheme=\"blue\"\r\n            aria-label=\"details\"\r\n            icon={<CgDetailsMore />}\r\n            onClick={() => history.push(`/people/${person.id}`)}\r\n          />\r\n        </Tooltip>\r\n        <Tooltip label=\"Delete\">\r\n          <IconButton\r\n            size=\"xs\"\r\n            fontSize={16}\r\n            colorScheme=\"red\"\r\n            aria-label=\"delete\"\r\n            icon={<AiFillDelete />}\r\n            onClick={() => deletePersonById(person.id)}\r\n          />\r\n        </Tooltip>\r\n      </HStack>\r\n    </HStack>\r\n  )\r\n}\r\n\r\nexport default Person\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_PEOPLE = gql`\r\n  query getAllPeople{\r\n    getAllPeople {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ALL_NOTES = gql`\r\n  query getAllNotes{\r\n    getAllNotes {\r\n      id\r\n      title\r\n      description\r\n      completed\r\n      owner {\r\n        id\r\n        name\r\n        age\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_SINGLE_PERSON = gql`\r\n  query($id: ID!) {\r\n    getSinglePerson(id: $id) {\r\n      id\r\n      name\r\n      age\r\n      notes {\r\n        id\r\n        title\r\n        description\r\n        completed\r\n        owner {\r\n          id \r\n          name\r\n          age\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import { gql } from '@apollo/client'\r\n\r\nexport const DELETE_PERSON = gql`\r\n  mutation($id: ID!) {\r\n    deletePerson(id: $id) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_NOTE = gql`\r\n  mutation($id: ID!) {\r\n    deleteNote(id: $id) {\r\n      id\r\n      title\r\n      owner{\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOGGLE_NOTE_COMPLETED = gql`\r\nmutation ($id: ID!) {\r\n  toggleNoteCompleted(id: $id) {\r\n    id\r\n    title\r\n    description\r\n    completed\r\n    owner {\r\n      id\r\n      name\r\n      age\r\n    }\r\n  }\r\n} \r\n`\r\n\r\nexport const UPDATE_AGE = gql`\r\n  mutation($id: ID!, $age: Int!) {\r\n    updateAge(id: $id, age: $age) {\r\n      id\r\n      age\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_PERSON = gql`\r\n  mutation($name: String!, $age: Int) {\r\n    addPerson(name: $name, age: $age) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const ADD_NOTE = gql`\r\n  mutation($title: String!, $description: String, $completed: Boolean, $owner: String!) {\r\n    addNote(title: $title, description: $description, completed: $completed, owner: $owner) \r\n    {\r\n      id\r\n      title\r\n      description\r\n      completed\r\n      owner {\r\n        id\r\n        name\r\n        age\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { VStack } from '@chakra-ui/react'\r\nimport Person from './Person'\r\nimport { GET_ALL_PEOPLE } from '../queries'\r\nimport { DELETE_PERSON } from '../mutations'\r\n\r\nconst PeopleList = () => {\r\n\r\n  const { data, loading, error } = useQuery(GET_ALL_PEOPLE)\r\n  const [deletePerson] = useMutation(DELETE_PERSON)\r\n\r\n  const deletePersonById = (id) => {\r\n    deletePerson({\r\n      variables: { id },\r\n      update(cache) {\r\n        cache.modify({\r\n          fields: {\r\n            getAllPeople(existingPersonRefs, { readField }) {\r\n              return existingPersonRefs.filter(\r\n                personRef => id != readField('id', personRef)\r\n              )\r\n            }\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return (\r\n    <VStack\r\n      overflowY=\"scroll\"\r\n      h=\"45vh\"\r\n      spacing={4}\r\n      w=\"full\"\r\n      sx={{\r\n        '::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n    >\r\n      {\r\n        data.getAllPeople.map((person, idx) => (\r\n          <Person\r\n            key={idx}\r\n            person={person}\r\n            deletePersonById={deletePersonById}\r\n          />\r\n        ))\r\n      }\r\n    </VStack >\r\n  )\r\n}\r\n\r\nexport default PeopleList\r\n","import React from 'react'\r\nimport { Box, IconButton, Heading, Text, HStack, Tooltip, useToast } from '@chakra-ui/react'\r\nimport { AiFillDelete, AiOutlineCheckCircle } from 'react-icons/ai'\r\nimport { AiFillCheckCircle } from 'react-icons/ai'\r\nimport { useMutation } from '@apollo/client'\r\nimport { TOGGLE_NOTE_COMPLETED } from '../mutations'\r\n\r\nconst Note = ({ note, deleteNoteById }) => {\r\n\r\n  const toast = useToast()\r\n  const [toggleCompleted] = useMutation(TOGGLE_NOTE_COMPLETED)\r\n\r\n  const completeNote = async (id) => {\r\n    await toggleCompleted({\r\n      variables: {\r\n        id\r\n      }\r\n    })\r\n\r\n    toast({\r\n      description: note.completed ? \"Note marked as not completed!\" : \"Note marked as completed!\",\r\n      duration: 3000,\r\n      isClosable: true,\r\n      status: note.completed ? \"warning\" : \"success\"\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDir=\"column\" transition=\"background-color 0.4s ease\" textAlign=\"left\" position=\"relative\" color=\"gray.800\" p={4} borderRadius=\"xl\" bgColor={note.completed ? \"green.100\" : \"yellow.100\"}>\r\n\r\n      <Heading as=\"h2\" size=\"md\">{note.title}</Heading>\r\n      <Text w=\"100%\" mt={4} flexGrow=\"1\" >{note.description}</Text>\r\n      <Text mt={4} >\r\n        <Text as=\"span\" fontWeight=\"800\">Owner: </Text>\r\n        <Text as=\"span\">{note.owner?.name}</Text>\r\n      </Text>\r\n\r\n      <HStack\r\n        position=\"absolute\"\r\n        right={2}\r\n        bottom={2}\r\n        spacing={0}\r\n      >\r\n        <Tooltip label={note.completed ? \"Mark as Not Completed\" : \"Complete Note\"} aria-label=\"complete or uncomplete note\">\r\n          <IconButton\r\n            size=\"xs\"\r\n            fontSize={20}\r\n            color={note.completed ? \"green\" : \"gray.800\"}\r\n            _hover={{ color: 'green.500' }}\r\n            variant=\"link\"\r\n            aria-label=\"complete note\"\r\n            icon={note.completed ? <AiFillCheckCircle /> : <AiOutlineCheckCircle />}\r\n            onClick={() => completeNote(note.id)}\r\n          />\r\n        </Tooltip>\r\n        <Tooltip label=\"Delete Note\" aria-label=\"delete note\">\r\n          <IconButton\r\n            size=\"xs\"\r\n            fontSize={20}\r\n            color=\"red.400\"\r\n            _hover={{ color: 'red.500' }}\r\n            variant=\"link\"\r\n            aria-label=\"delete note\"\r\n            icon={<AiFillDelete />}\r\n            onClick={() => deleteNoteById(note.id)}\r\n          />\r\n        </Tooltip>\r\n      </HStack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport { SimpleGrid } from '@chakra-ui/react'\r\nimport Note from './Note'\r\n\r\nconst NotesList = ({ notes, deleteNoteById, mt, w, h }) => {\r\n\r\n  return (\r\n    <SimpleGrid\r\n      mt={mt || 0}\r\n      gridAutoRows=\"minmax(min-content,max-content)\"\r\n      h={h || \"45vh\"}\r\n      overflowY=\"scroll\"\r\n      w={w || \"full\"}\r\n      columns={[1, 1, 2]}\r\n      spacing={4}\r\n      sx={{\r\n        '::-webkit-scrollbar': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n    >\r\n      {\r\n        notes.map((note, idx) => (\r\n          <Note\r\n            key={idx}\r\n            note={note}\r\n            deleteNoteById={deleteNoteById}\r\n          />\r\n        )\r\n        )}\r\n    </SimpleGrid>\r\n  )\r\n}\r\n\r\nexport default NotesList\r\n","import React from 'react'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { DELETE_NOTE } from '../mutations'\r\nimport { GET_ALL_NOTES } from '../queries'\r\nimport NotesList from './NotesList'\r\nimport { useToast } from '@chakra-ui/react'\r\n\r\nconst AllNotes = () => {\r\n  const { data, loading, error } = useQuery(GET_ALL_NOTES)\r\n  const [deleteNote] = useMutation(DELETE_NOTE)\r\n  const toast = useToast()\r\n\r\n  const deleteNoteById = async (id) => {\r\n    await deleteNote({\r\n      variables: { id },\r\n      update(cache, data) {\r\n        cache.modify({\r\n          fields: {\r\n            getAllNotes(existingNoteRefs, { readField }) {\r\n              return existingNoteRefs.filter(n => {\r\n                return id != readField('id', n)\r\n              })\r\n            }\r\n          }\r\n        })\r\n        cache.modify({\r\n          id: cache.identify(data.data.deleteNote.owner),\r\n          fields: {\r\n            notes(existingNotesRef, { readField }) {\r\n              return existingNotesRef.filter(n => {\r\n                return id != readField('id', n)\r\n              })\r\n            }\r\n          }\r\n        })\r\n      }\r\n    })\r\n    toast({\r\n      description: 'Note deleted!',\r\n      duration: 3000,\r\n      isClosable: true,\r\n      status: \"error\",\r\n    })\r\n  }\r\n\r\n  if (loading) return <p>Loading...</p>\r\n  if (error) return <p>Error :(</p>\r\n  return (\r\n    <NotesList notes={data.getAllNotes} deleteNoteById={deleteNoteById} />\r\n  )\r\n}\r\n\r\nexport default AllNotes\r\n","import React from 'react'\r\nimport { Heading, Text, Box, Tabs, TabList, Tab, TabPanels, TabPanel, HStack, Button } from \"@chakra-ui/react\";\r\nimport PeopleList from './PeopleList'\r\nimport NotesList from './NotesList'\r\nimport AllNotes from './AllNotes';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      <Heading px={2} size=\"4xl\">Note Manager</Heading>\r\n      <Text fontSize=\"xl\">Add notes for people.</Text>\r\n      <HStack mt={4} spacing={4}>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          onClick={() => history.push('/add-person')}\r\n        >Add Person</Button>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          onClick={() => history.push('/add-note')}\r\n          variant=\"outline\">Add Note</Button>\r\n      </HStack>\r\n      <Box my={8} w={[\"90%\", \"60%\"]}>\r\n        <Tabs isLazy isFitted size=\"lg\">\r\n          <TabList>\r\n            <Tab fontWeight=\"600\">People</Tab>\r\n            <Tab fontWeight=\"600\">Notes</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel px={0}>\r\n              <PeopleList />\r\n            </TabPanel>\r\n            <TabPanel px={0}>\r\n              <AllNotes />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { IconButton } from '@chakra-ui/react'\r\nimport { CgChevronLeft } from 'react-icons/cg'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst BackButton = () => {\r\n\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <IconButton\r\n      position=\"absolute\"\r\n      top={4}\r\n      left={4}\r\n      size=\"sm\"\r\n      fontSize=\"2xl\"\r\n      aria-label=\"Go back\"\r\n      variant=\"ghost\"\r\n      icon={<CgChevronLeft />}\r\n      onClick={() => history.goBack()}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BackButton\r\n","import React, { useState } from 'react'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Button, Heading, HStack, IconButton, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, NumberInput, NumberInputField, Text, Tooltip, useDisclosure, useToast } from '@chakra-ui/react'\r\nimport BackButton from './BackButton'\r\nimport NotesList from './NotesList'\r\nimport { GET_SINGLE_PERSON } from '../queries'\r\nimport { DELETE_NOTE, UPDATE_AGE } from '../mutations'\r\nimport { FiEdit } from 'react-icons/fi'\r\n\r\nconst PersonPage = () => {\r\n  const { id } = useParams()\r\n  const [age, setAge] = useState()\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const toast = useToast()\r\n\r\n  const { data, loading, error } = useQuery(GET_SINGLE_PERSON, {\r\n    variables: { id },\r\n    // fetchPolicy: \"network-only\"\r\n  })\r\n  const [updateAge] = useMutation(UPDATE_AGE)\r\n  const [deleteNote] = useMutation(DELETE_NOTE)\r\n\r\n  const deleteNoteById = async (id) => {\r\n    await deleteNote({\r\n      variables: { id },\r\n      update(cache, data) {\r\n        cache.modify({\r\n          id: cache.identify(data.data.deleteNote.owner),\r\n          fields: {\r\n            notes(existingNotesRef, { readField }) {\r\n              return existingNotesRef.filter(n => {\r\n                return id != readField('id', n)\r\n              })\r\n            }\r\n          }\r\n        })\r\n        cache.modify({\r\n          fields: {\r\n            getAllNotes(existingNoteRefs, { readField }) {\r\n              return existingNoteRefs.filter(n => {\r\n                return id != readField('id', n)\r\n              })\r\n            }\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    toast({\r\n      description: 'Note deleted!',\r\n      duration: 3000,\r\n      isClosable: true,\r\n      status: \"error\",\r\n    })\r\n  }\r\n\r\n  const updateAgeById = async (id, age) => {\r\n    await updateAge({\r\n      variables: {\r\n        id,\r\n        age: parseInt(age)\r\n      }\r\n    })\r\n    onClose()\r\n    toast({\r\n      description: 'Age updated!',\r\n      duration: 3000,\r\n      isClosable: true,\r\n      status: \"success\",\r\n    })\r\n  }\r\n\r\n  if (loading) return <p>Loading...</p>\r\n  if (error) return <p>Error :(</p>\r\n\r\n  return (\r\n    <>\r\n      <Modal size=\"xs\" isCentered isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Edit Age</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <HStack mb={4}>\r\n              <NumberInput min={1} max={200} clampValueOnBlur={false}>\r\n                <NumberInputField\r\n                  placeholder=\"Enter new age\"\r\n                  value={age}\r\n                  onChange={e => setAge(e.target.value)}\r\n                />\r\n              </NumberInput>\r\n              <Button\r\n                onClick={() => updateAgeById(data.getSinglePerson.id, age)}\r\n                colorScheme=\"yellow\">Update</Button>\r\n            </HStack>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <BackButton />\r\n      <Heading px={2} size=\"4xl\">{data.getSinglePerson.name}</Heading>\r\n      <HStack mt={2}>\r\n        <Text fontSize=\"xl\">\r\n          <Text as=\"span\" >Age: </Text>\r\n          <Text as=\"span\">{data.getSinglePerson.age}</Text>\r\n        </Text>\r\n        <Tooltip label=\"Edit Age\" aria-label=\"Edit Age Tooltip\">\r\n          <IconButton\r\n            size=\"xs\"\r\n            fontSize=\"sm\"\r\n            aria-label=\"edit age\"\r\n            colorScheme=\"yellow\"\r\n            icon={<FiEdit />}\r\n            onClick={onOpen}\r\n          />\r\n        </Tooltip>\r\n      </HStack>\r\n      <NotesList\r\n        h=\"60vh\"\r\n        w={[\"90%\", \"80%\"]}\r\n        mt={12}\r\n        notes={data.getSinglePerson.notes}\r\n        deleteNoteById={deleteNoteById}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonPage\r\n","import React, { useState } from 'react'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport { Box, Button, Flex, FormControl, FormLabel, Heading, Input, NumberInput, NumberInputField, useColorModeValue, useToast } from '@chakra-ui/react'\r\nimport { ADD_PERSON } from '../mutations'\r\nimport { useHistory } from 'react-router-dom'\r\nimport BackButton from './BackButton'\r\n\r\nconst AddPerson = () => {\r\n\r\n  const [name, setName] = useState('')\r\n  const [age, setAge] = useState()\r\n\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n\r\n  const bgColor = useColorModeValue('white', 'gray.900')\r\n\r\n  const [addPerson] = useMutation(ADD_PERSON)\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault()\r\n    await addPerson({\r\n      variables: {\r\n        name,\r\n        age: parseInt(age)\r\n      },\r\n      update(cache, data) {\r\n        cache.modify({\r\n          fields: {\r\n            getAllPeople(existingPersonRefs) {\r\n              const newPersonRef = cache.writeFragment({\r\n                data: data.data.addPerson,\r\n                fragment: gql`\r\n                fragment NewPerson on Person{\r\n                  id\r\n                  name\r\n                  age\r\n                  notes{\r\n                    id\r\n                    title\r\n                    description\r\n                    completed\r\n                  }\r\n                }\r\n              `\r\n              })\r\n              return [...existingPersonRefs, newPersonRef]\r\n            }\r\n          }\r\n        })\r\n      }\r\n    })\r\n    toast({\r\n      description: 'Person added!',\r\n      duration: 3000,\r\n      isClosable: true,\r\n      status: \"success\"\r\n    })\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      <Flex w={[\"90%\", \"full\"]} h=\"full\" justify=\"center\" align=\"center\">\r\n        <Box borderRadius=\"xl\" p={8} bgColor={bgColor} boxShadow=\"2xl\">\r\n          <Heading as=\"h1\">Add Person</Heading>\r\n          <form onSubmit={submitForm}>\r\n            <FormControl mt={4} id=\"name\" isRequired>\r\n              <FormLabel>Name</FormLabel>\r\n              <Input value={name} onChange={e => setName(e.target.value)} type=\"text\" />\r\n            </FormControl>\r\n            <FormControl mt={4} id=\"age\">\r\n              <FormLabel>Age</FormLabel>\r\n              <NumberInput min={0} max={200} clampValueOnBlur={false}>\r\n                <NumberInputField value={age} onChange={e => setAge(e.target.value)} />\r\n              </NumberInput>\r\n            </FormControl>\r\n            <Button type=\"submit\" mt={4} colorScheme=\"blue\">Add</Button>\r\n          </form>\r\n        </Box>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddPerson\r\n","import React, { useState } from 'react'\r\nimport { Box, Button, Flex, FormControl, FormLabel, Heading, Input, NumberInput, NumberInputField, Select, useColorModeValue, useToast } from '@chakra-ui/react'\r\nimport BackButton from './BackButton'\r\nimport { gql, useMutation, useQuery } from '@apollo/client'\r\nimport { GET_ALL_PEOPLE } from '../queries'\r\nimport { ADD_NOTE } from '../mutations'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst AddNote = () => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [owner, setOwner] = useState('')\r\n\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n\r\n  const { data, loading, error } = useQuery(GET_ALL_PEOPLE)\r\n  const [addNote] = useMutation(ADD_NOTE)\r\n\r\n  const bgColor = useColorModeValue('white', 'gray.900')\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault()\r\n    await addNote({\r\n      variables: {\r\n        title, description, owner\r\n      },\r\n      update(cache, data) {\r\n        console.log(data.data)\r\n        cache.modify({\r\n          fields: {\r\n            getAllNotes(existingNoteRefs) {\r\n              const newNoteRef = cache.writeFragment({\r\n                data: data.data.addNote,\r\n                fragment: gql`\r\n                  fragment NewNote on Note{\r\n                    id\r\n                    title\r\n                    description\r\n                    completed\r\n                    owner {\r\n                      id\r\n                      name\r\n                      age\r\n                    }\r\n                  }\r\n                `\r\n              })\r\n              return [...existingNoteRefs, newNoteRef]\r\n            }\r\n          }\r\n        })\r\n        cache.modify({\r\n          id: cache.identify(data.data.addNote.owner),\r\n          fields: {\r\n            notes(existingNoteRefs) {\r\n              const newNoteRef = cache.writeFragment({\r\n                data: data.data.addNote,\r\n                fragment: gql`\r\n                  fragment NewNote on Note{\r\n                    id\r\n                    title\r\n                    description\r\n                    completed\r\n                    owner {\r\n                      id\r\n                      name\r\n                      age\r\n                    }\r\n                  }\r\n                `\r\n              })\r\n              return [...existingNoteRefs, newNoteRef]\r\n            }\r\n          }\r\n        })\r\n        console.log(cache)\r\n      }\r\n    })\r\n    toast({\r\n      description: 'Note added!',\r\n      duration: 3000,\r\n      isClosable: true,\r\n      status: \"success\"\r\n    })\r\n    history.push('/')\r\n  }\r\n\r\n  if (loading) return <p>Loading...</p>\r\n  if (error) return <p>Error :(</p>\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      <Flex w={[\"90%\", \"full\"]} h=\"full\" justify=\"center\" align=\"center\">\r\n        <Box borderRadius=\"xl\" p={8} bgColor={bgColor} boxShadow=\"2xl\">\r\n          <Heading as=\"h1\">Add Note</Heading>\r\n          <form onSubmit={submitForm}>\r\n            <FormControl mt={4} id=\"title\" isRequired>\r\n              <FormLabel>Title</FormLabel>\r\n              <Input value={title} onChange={e => setTitle(e.target.value)} type=\"text\" />\r\n            </FormControl>\r\n            <FormControl mt={4} id=\"description\">\r\n              <FormLabel>Description</FormLabel>\r\n              <Input value={description} onChange={e => setDescription(e.target.value)} type=\"text\" />\r\n            </FormControl>\r\n            <FormControl mt={4} id=\"owner\" isRequired>\r\n              <FormLabel>Owner</FormLabel>\r\n              <Select value={owner} onChange={e => setOwner(e.target.value)} placeholder=\"Select owner of this note\">\r\n                {\r\n                  data.getAllPeople.map(person => (\r\n                    <option key={person.id} value={person.name}>{person.name}</option>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Button type=\"submit\" mt={4} colorScheme=\"blue\">Add</Button>\r\n          </form>\r\n        </Box>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddNote\r\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\nimport { Container } from '@chakra-ui/react'\nimport { ColorModeSwitcher } from './ColorModeSwitcher'\nimport BgIcons from './components/BgIcons'\nimport Home from './components/Home';\nimport PersonPage from './components/PersonPage';\nimport AddPerson from './components/AddPerson';\nimport AddNote from './components/AddNote';\n\nconst App = () => {\n\n  return (\n    <>\n      <ColorModeSwitcher position=\"absolute\" top={4} right={4} />\n      <BgIcons />\n      <Container maxW=\"3xl\" h=\"100vh\" textAlign=\"center\" centerContent py={12} px={0}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/gql-apollo-note-manager\">\n              <Home />\n            </Route>\n            <Route exact path=\"/people/:id\">\n              <PersonPage />\n            </Route>\n            <Route exact path=\"/add-person\">\n              <AddPerson />\n            </Route>\n            <Route exact path=\"/add-note\">\n              <AddNote />\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColorModeScript } from '@chakra-ui/react';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport theme from './theme/index'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport { Fonts } from './fonts/Fonts'\nimport App from './App';\n\n\nconst client = new ApolloClient({\n  uri: 'https://gql-todo-api.herokuapp.com/',\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <StrictMode>\n    <ApolloProvider client={client}>\n      <ChakraProvider resetCSS theme={theme}>\n        <ColorModeScript />\n        <Fonts/>\n        <App />\n      </ChakraProvider>\n    </ApolloProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}